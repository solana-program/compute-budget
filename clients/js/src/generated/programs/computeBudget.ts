/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Address, containsBytes, getU8Encoder } from '@solana/web3.js';
import {
  ParsedRequestHeapFrameInstruction,
  ParsedRequestUnitsInstruction,
  ParsedSetComputeUnitLimitInstruction,
  ParsedSetComputeUnitPriceInstruction,
  ParsedSetLoadedAccountsDataSizeLimitInstruction,
} from '../instructions';

export const COMPUTE_BUDGET_PROGRAM_ADDRESS =
  'ComputeBudget111111111111111111111111111111' as Address<'ComputeBudget111111111111111111111111111111'>;

export enum ComputeBudgetInstruction {
  RequestUnits,
  RequestHeapFrame,
  SetComputeUnitLimit,
  SetComputeUnitPrice,
  SetLoadedAccountsDataSizeLimit,
}

export function identifyComputeBudgetInstruction(
  instruction: { data: Uint8Array } | Uint8Array
): ComputeBudgetInstruction {
  const data =
    instruction instanceof Uint8Array ? instruction : instruction.data;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return ComputeBudgetInstruction.RequestUnits;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return ComputeBudgetInstruction.RequestHeapFrame;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return ComputeBudgetInstruction.SetComputeUnitLimit;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return ComputeBudgetInstruction.SetComputeUnitPrice;
  }
  if (containsBytes(data, getU8Encoder().encode(4), 0)) {
    return ComputeBudgetInstruction.SetLoadedAccountsDataSizeLimit;
  }
  throw new Error(
    'The provided instruction could not be identified as a computeBudget instruction.'
  );
}

export type ParsedComputeBudgetInstruction<
  TProgram extends string = 'ComputeBudget111111111111111111111111111111',
> =
  | ({
      instructionType: ComputeBudgetInstruction.RequestUnits;
    } & ParsedRequestUnitsInstruction<TProgram>)
  | ({
      instructionType: ComputeBudgetInstruction.RequestHeapFrame;
    } & ParsedRequestHeapFrameInstruction<TProgram>)
  | ({
      instructionType: ComputeBudgetInstruction.SetComputeUnitLimit;
    } & ParsedSetComputeUnitLimitInstruction<TProgram>)
  | ({
      instructionType: ComputeBudgetInstruction.SetComputeUnitPrice;
    } & ParsedSetComputeUnitPriceInstruction<TProgram>)
  | ({
      instructionType: ComputeBudgetInstruction.SetLoadedAccountsDataSizeLimit;
    } & ParsedSetLoadedAccountsDataSizeLimitInstruction<TProgram>);
